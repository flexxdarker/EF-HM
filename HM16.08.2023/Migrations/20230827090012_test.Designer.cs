// <auto-generated />
using System;
using HM16._08._2023.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HM16._08._2023.Migrations
{
    [DbContext(typeof(MusicAppDbContext))]
    [Migration("20230827090012_test")]
    partial class test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HM16._08._2023.Entities.Albums", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistsId")
                        .HasColumnType("int");

                    b.Property<int>("GanreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistsId");

                    b.HasIndex("GanreId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistsId = 1,
                            GanreId = 2,
                            Name = "Kolomuyki",
                            Year = 2014
                        },
                        new
                        {
                            Id = 2,
                            ArtistsId = 2,
                            GanreId = 4,
                            Name = "Sending Money",
                            Year = 2020
                        },
                        new
                        {
                            Id = 3,
                            ArtistsId = 3,
                            GanreId = 1,
                            Name = "Wonderwall",
                            Year = 2018
                        });
                });

            modelBuilder.Entity("HM16._08._2023.Entities.Artists", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountriesId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountriesId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountriesId = 1,
                            Name = "Kyzma",
                            Surname = "Skriabin"
                        },
                        new
                        {
                            Id = 2,
                            CountriesId = 2,
                            Name = "Mishai",
                            Surname = "Sensei"
                        },
                        new
                        {
                            Id = 3,
                            CountriesId = 3,
                            Name = "Lucky",
                            Surname = "Luke"
                        });
                });

            modelBuilder.Entity("HM16._08._2023.Entities.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "For Sitmul"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Chill Out"
                        });
                });

            modelBuilder.Entity("HM16._08._2023.Entities.Countries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Poland"
                        },
                        new
                        {
                            Id = 3,
                            Name = "UK"
                        });
                });

            modelBuilder.Entity("HM16._08._2023.Entities.Ganres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ganres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pop"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Rock"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Metalic"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Phonk"
                        });
                });

            modelBuilder.Entity("HM16._08._2023.Entities.Playlists", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Playlists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            Name = "Chilling out"
                        });
                });

            modelBuilder.Entity("HM16._08._2023.Entities.Tracks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlbumsId")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlaylistsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlbumsId");

                    b.HasIndex("PlaylistsId");

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumsId = 1,
                            Duration = 240,
                            Name = "Kolomuyki - Skryabina"
                        },
                        new
                        {
                            Id = 2,
                            AlbumsId = 2,
                            Duration = 260,
                            Name = "Sending Money"
                        },
                        new
                        {
                            Id = 3,
                            AlbumsId = 3,
                            Duration = 250,
                            Name = "WonderWall"
                        });
                });

            modelBuilder.Entity("HM16._08._2023.Entities.Albums", b =>
                {
                    b.HasOne("HM16._08._2023.Entities.Artists", "Artists")
                        .WithMany()
                        .HasForeignKey("ArtistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HM16._08._2023.Entities.Ganres", "Ganre")
                        .WithMany()
                        .HasForeignKey("GanreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artists");

                    b.Navigation("Ganre");
                });

            modelBuilder.Entity("HM16._08._2023.Entities.Artists", b =>
                {
                    b.HasOne("HM16._08._2023.Entities.Countries", "Countries")
                        .WithMany()
                        .HasForeignKey("CountriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Countries");
                });

            modelBuilder.Entity("HM16._08._2023.Entities.Playlists", b =>
                {
                    b.HasOne("HM16._08._2023.Entities.Categories", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HM16._08._2023.Entities.Tracks", b =>
                {
                    b.HasOne("HM16._08._2023.Entities.Albums", "Albums")
                        .WithMany()
                        .HasForeignKey("AlbumsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HM16._08._2023.Entities.Playlists", null)
                        .WithMany("Tracks")
                        .HasForeignKey("PlaylistsId");

                    b.Navigation("Albums");
                });

            modelBuilder.Entity("HM16._08._2023.Entities.Playlists", b =>
                {
                    b.Navigation("Tracks");
                });
#pragma warning restore 612, 618
        }
    }
}
