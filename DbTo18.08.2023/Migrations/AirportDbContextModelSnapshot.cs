// <auto-generated />
using DbTo18._08._2023.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbTo18._08._2023.Migrations
{
    [DbContext(typeof(AirportDbContext))]
    partial class AirportDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DbTo18._08._2023.Entities.Accounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "firstTime",
                            Password = "myfirsttime"
                        },
                        new
                        {
                            Id = 2,
                            Login = "favAirline",
                            Password = "rasha-parasha"
                        });
                });

            modelBuilder.Entity("DbTo18._08._2023.Entities.Clients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountsId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("FlightsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SexsId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AccountsId")
                        .IsUnique();

                    b.HasIndex("FlightsId");

                    b.HasIndex("SexsId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountsId = 1,
                            Email = "AdrPolichuck@gmail.com",
                            FlightsId = 1,
                            Name = "Andrii",
                            SexsId = 1,
                            Surname = "Polishuck"
                        },
                        new
                        {
                            Id = 2,
                            AccountsId = 2,
                            Email = "pulupenkoOleks@gmail.com",
                            FlightsId = 2,
                            Name = "Oleksandr",
                            SexsId = 1,
                            Surname = "Pulupenko"
                        });
                });

            modelBuilder.Entity("DbTo18._08._2023.Entities.Flights", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AirplanesId")
                        .HasColumnType("int");

                    b.Property<string>("ArrivalPlace")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DispatchPlace")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Number")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AirplanesId")
                        .IsUnique();

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AirplanesId = 1,
                            ArrivalPlace = "London",
                            DispatchPlace = "San Diego",
                            Number = 1
                        },
                        new
                        {
                            Id = 2,
                            AirplanesId = 2,
                            ArrivalPlace = "Berlin",
                            DispatchPlace = "Los Angeles",
                            Number = 2
                        });
                });

            modelBuilder.Entity("DbTo18._08._2023.Entities.Sexs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Sexs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Sex = "Male"
                        },
                        new
                        {
                            Id = 2,
                            Sex = "Female"
                        });
                });

            modelBuilder.Entity("Hm18._08._2023.Entities.Airplanes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("MaxPassengers")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Airplanes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Ukraine",
                            MaxPassengers = 8,
                            Model = "CJ2",
                            Type = "Jet"
                        },
                        new
                        {
                            Id = 2,
                            Country = "Poland",
                            MaxPassengers = 545,
                            Model = "A380",
                            Type = "Airbus"
                        });
                });

            modelBuilder.Entity("DbTo18._08._2023.Entities.Clients", b =>
                {
                    b.HasOne("DbTo18._08._2023.Entities.Accounts", "Accounts")
                        .WithOne("Clients")
                        .HasForeignKey("DbTo18._08._2023.Entities.Clients", "AccountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbTo18._08._2023.Entities.Flights", "Flights")
                        .WithMany("Clients")
                        .HasForeignKey("FlightsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbTo18._08._2023.Entities.Sexs", "Sexs")
                        .WithMany("Clients")
                        .HasForeignKey("SexsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");

                    b.Navigation("Flights");

                    b.Navigation("Sexs");
                });

            modelBuilder.Entity("DbTo18._08._2023.Entities.Flights", b =>
                {
                    b.HasOne("Hm18._08._2023.Entities.Airplanes", "Airplanes")
                        .WithOne("Flights")
                        .HasForeignKey("DbTo18._08._2023.Entities.Flights", "AirplanesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airplanes");
                });

            modelBuilder.Entity("DbTo18._08._2023.Entities.Accounts", b =>
                {
                    b.Navigation("Clients")
                        .IsRequired();
                });

            modelBuilder.Entity("DbTo18._08._2023.Entities.Flights", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("DbTo18._08._2023.Entities.Sexs", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("Hm18._08._2023.Entities.Airplanes", b =>
                {
                    b.Navigation("Flights")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
